# 本书使用的 .tmux.conf 文件

# hotkey
#, name window
#& kill window
#x kill pane

# command to change the default directory for new window
# attach -c desired/directory/path

# command run command in all panel
#:setw synchronize-panes

set-window-option -g mode-keys vi

# force SHELL ENV variable as shell
#if-shell 'uname | grep -q Darwin' \
#    set-option -g default-shell /usr/local/bin/bash

#set-window-option -g mode-keys vi
# start selecting and paste text typing 'v/y' key (once you are in copy mode)
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-selection

# copy selected text to the system's clipboard, for MacOS, brew install reattach-to-user-namespace
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# copy selected text to the system's clipboard, for Linux, install xclip
#bind-key -t vi-copy y copy-pipe "xclip"

# 把前缀键从 C-b 更改为 C-j
set -g prefix C-j

# 释放之前的 Ctrl-b 前缀快捷键
unbind C-b

# 设定前缀键和命令键之间的延时
set -sg escape-time 1

# 确保可以向其它程序发送 Ctrl-J
bind C-j send-prefix

# Allow programs to change the window name using a terminal escape sequence (\033k...\033\\).  The default is on.
set -g allow-rename off

# reeanble ssh session
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

#new-windows -n work
#new-windows -n home
#new -n work
#new -n home

#new-session -s weiwei
#new-session -s weiwei
#detach
#switch-client -t weiwei
#attach -d -t weiwei
#new-window -n home
##split-window -h
##resize-pane -L 30
#
#attach
#new-window -n work
#new-window -dn fun

#new -s work vim # 新建名为 work 的会话，并启动 mutt  
#neww vim # 启动 rtorrent  
#neww vim # 启动 vim  
#neww bash
#selectw -t 3 # 默认选择标号为 3 的窗口

#selectw -t 1
#attach -t weiwei

# 分割面板
unbind |
bind | split-window -h \; select-layout even-horizontal
bind - split-window -v \; select-layout event-vertical

# 在面板之间移动
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

### 快速选择面板
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

## brew install reattach-to-user-namespace
#if-shell '[[ `uname` == Darwin ]]' \
#    # buffer缓存复制到Mac系统粘贴板
#    'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
#    # Mac系统粘贴板内容复制到会话
#    'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"'
#    # 绑定y键为复制选中文本到Mac系统粘贴板
#    'bind-key -T copy-mode-vi "y" send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"' \
#    # 鼠标拖动选中文本，并复制到Mac系统粘贴板
#    'bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"'

set -g mouse off
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M

## 设置默认的终端模式为 256 色模式
#set -g default-terminal "screen-256color"

## 开启活动通知
#setw -g monitor-activity on
#set -g visual-activity on

# set scrollback buffer to 30000 lines
set -g history-limit 30000

## 设置状态栏的颜色
#set -g status-fg white
#set -g status-bg black

## 设置窗口列表的颜色
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim

## 设置活动窗口的颜色
#setw -g window-status-current-fg white
#setw -g window-status-current-bg blue
#setw -g window-status-current-attr bright

# pane color
#set -g pane-border-fg green
#set -g pane-active-border-fg blue
#set -g pane-border-bg black
#set -g pane-active-border-bg yellow

## 设置命令行或消息的颜色
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright
#
## 设置状态栏左侧的内容和颜色
#set -g status-left-length 40
#set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
#set -g status-utf8 on
#
## 设置状态栏右侧的内容和颜色
## 15% | 28 Nov 18:15
#set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# do not show any information in the right side of status bar
set-option -g status-left "[#H]"
# show short hostname in the right side of status bar
set-option -g status-left "[#S]"
set-option -g status-right ""

#
## 每 60 秒更新一次状态栏
#set -g status-interval 60
#
## 设置窗口列表居中显示
#set -g status-justify centre
#
## 开启 vi 按键
#setw -g mode-keys vi
#
## 在相同目录下使用 tmux-panes 脚本开启面板
#unbind v
#unbind n
#bind v send-keys " ~/tmux-panes -h" C-m
#bind n send-keys " ~/tmux-panes -v" C-m
#
## 临时最大化面板或恢复面板大小
#unbind Up
#bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
#unbind Down
#bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

## 把日志输出到指定文件
#bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# https://www.sitepoint.com/10-killer-tmux-tips/
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @resurrect-save-shell-history 'on'
set -g @resurrect-strategy-vim 'session'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
set-option -g default-shell /bin/bash
